name: Deploy Redmine

on:
  workflow_dispatch:  # Ermöglicht manuelle Ausführung
  push:
    branches: [ main ]

jobs:
  deploy-redmine:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Create Docker network
        run: docker network create redmine-network
      
      - name: Start PostgreSQL
        run: |
          docker run -d \
            --name redmine-postgres \
            --network redmine-network \
            -e POSTGRES_PASSWORD=redmine_password \
            -e POSTGRES_USER=redmine \
            -e POSTGRES_DB=redmine_db \
            postgres:13
      
      - name: Start Redmine
        run: |
          docker run -d \
            --name redmine \
            --network redmine-network \
            -p 3000:3000 \
            -e REDMINE_DB_POSTGRES=redmine-postgres \
            -e REDMINE_DB_USERNAME=redmine \
            -e REDMINE_DB_PASSWORD=redmine_password \
            -e REDMINE_DB_DATABASE=redmine_db \
            -e REDMINE_SECRET_KEY_BASE=$(openssl rand -hex 32) \
            redmine:5-alpine
      
      - name: Check Redmine Status
        run: |
          # Warten bis Redmine bereit ist
          timeout 60 bash -c 'until curl -s http://localhost:3000 > /dev/null; do sleep 1; done'
          
          # Status überprüfen
          if curl -s http://localhost:3000 > /dev/null; then
            echo "Redmine is running successfully!"
          else
            echo "Failed to start Redmine"
            docker logs redmine
            exit 1
          fi

      # Optional: Persistenz der Daten
      - name: Create Volume Directories
        run: |
          mkdir -p redmine/files
          mkdir -p redmine/plugins
          mkdir -p postgres/data
          
      - name: Update Docker containers with volumes
        run: |
          # Stoppen der bestehenden Container
          docker stop redmine redmine-postgres
          docker rm redmine redmine-postgres
          
          # Neustarten mit Volume-Mounts
          docker run -d \
            --name redmine-postgres \
            --network redmine-network \
            -e POSTGRES_PASSWORD=redmine_password \
            -e POSTGRES_USER=redmine \
            -e POSTGRES_DB=redmine_db \
            -v ${{ github.workspace }}/postgres/data:/var/lib/postgresql/data \
            postgres:13
            
          docker run -d \
            --name redmine \
            --network redmine-network \
            -p 3000:3000 \
            -e REDMINE_DB_POSTGRES=redmine-postgres \
            -e REDMINE_DB_USERNAME=redmine \
            -e REDMINE_DB_PASSWORD=redmine_password \
            -e REDMINE_DB_DATABASE=redmine_db \
            -e REDMINE_SECRET_KEY_BASE=$(openssl rand -hex 32) \
            -v ${{ github.workspace }}/redmine/files:/usr/src/redmine/files \
            -v ${{ github.workspace }}/redmine/plugins:/usr/src/redmine/plugins \
            redmine:5-alpine
